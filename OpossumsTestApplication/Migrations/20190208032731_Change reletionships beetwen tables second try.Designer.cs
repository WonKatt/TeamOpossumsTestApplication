// <auto-generated />
using System;
using FlickerDbModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace OpossumsTestApplication.Migrations
{
    [DbContext(typeof(d5h6stb0hfhccqContext))]
    [Migration("20190208032731_Change reletionships beetwen tables second try")]
    partial class Changereletionshipsbeetwentablessecondtry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "3.0.0-preview.19074.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FlickerDbModel.Faces", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<double?>("Anger")
                        .HasColumnName("anger");

                    b.Property<double?>("Disgust")
                        .HasColumnName("disgust");

                    b.Property<double?>("Fear")
                        .HasColumnName("fear");

                    b.Property<double?>("Happiness")
                        .HasColumnName("happiness");

                    b.Property<double?>("Neutral")
                        .HasColumnName("neutral");

                    b.Property<int?>("PhotoId")
                        .HasColumnName("photo_id");

                    b.Property<double?>("Sadness")
                        .HasColumnName("sadness");

                    b.Property<double?>("Surprise")
                        .HasColumnName("surprise");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId")
                        .IsUnique();

                    b.ToTable("faces");
                });

            modelBuilder.Entity("FlickerDbModel.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("FlickrId")
                        .HasColumnName("flickr_id")
                        .HasMaxLength(20);

                    b.Property<bool?>("IsFace")
                        .HasColumnName("is_face");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("photo");
                });

            modelBuilder.Entity("FlickerDbModel.Faces", b =>
                {
                    b.HasOne("FlickerDbModel.Photo", "Photo")
                        .WithOne("Faces")
                        .HasForeignKey("FlickerDbModel.Faces", "PhotoId")
                        .HasConstraintName("photo_face_fkey");
                });
#pragma warning restore 612, 618
        }
    }
}
